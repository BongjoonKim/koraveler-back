name: Deploy to EC2

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: |
          cd koraveler
          chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          # SSH 키 설정
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          # SSH 설정 (호스트 키 확인 비활성화)
          mkdir -p ~/.ssh
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
          
          # 빌드된 JAR 파일 EC2로 복사
          scp -i private_key.pem build/libs/koraveler-0.0.1-SNAPSHOT.jar $USER@$HOST:~/koraveler-back/koraveler/build/libs/
          
          # EC2에서 배포 실행
          ssh -i private_key.pem $USER@$HOST << 'ENDSSH'
            cd ~/koraveler-back/koraveler
          
            # 로그 디렉토리 생성 (없는 경우)
            mkdir -p ~/koraveler-back/koraveler/logs
          
            # Git pull (최신 코드 가져오기)
            echo "========================================="
            echo "Fetching latest code from git..."
            echo "========================================="
            git fetch --all
            git reset --hard origin/master
            git pull
          
            # 기존 프로세스 종료
            echo "========================================="
            echo "Stopping existing applications..."
            echo "========================================="
          
            # 기존 프로세스 종료
            PIDS=$(ps -ef | grep "koraveler-0.0.1-SNAPSHOT.jar" | grep -v grep | awk '{print $2}')
            if [ ! -z "$PIDS" ]; then
              for PID in $PIDS; do
                echo "Killing process $PID"
                kill -9 $PID
              done
              sleep 2
            fi
          
            # 포트 3003을 사용 중인 프로세스 종료
            PORT_PID=$(lsof -ti:3003)
            if [ ! -z "$PORT_PID" ]; then
              echo "Killing process using port 3003: $PORT_PID"
              kill -9 $PORT_PID
              sleep 2
            fi
          
            # ========================================
            # 방법 1: 간단한 nohup 실행 (로그 파일 지정)
            # ========================================
            echo "========================================="
            echo "Starting application with nohup..."
            echo "========================================="
          
            nohup java -Xmx512m -Xms256m -jar ~/koraveler-back/koraveler/build/libs/koraveler-0.0.1-SNAPSHOT.jar \
              > ~/koraveler-back/koraveler/logs/koraveler.log 2>&1 &
          
            # PID 저장
            echo $! > ~/koraveler-back/koraveler/app.pid
          
            # 실행 확인
            sleep 8
          
            if ps -p $(cat ~/koraveler-back/koraveler/app.pid) > /dev/null; then
              echo "✅ Application started successfully with PID: $(cat ~/koraveler-back/koraveler/app.pid)"
          
              # 포트 확인
              if lsof -Pi :3003 -sTCP:LISTEN -t > /dev/null 2>&1; then
                echo "✅ Port 3003 is listening"
                echo "Application URL: http://$HOST:3003"
              else
                echo "⚠️ Warning: Port 3003 is not listening yet"
              fi
          
              echo ""
              echo "Recent logs:"
              tail -n 20 ~/koraveler-back/koraveler/logs/koraveler.log
          
              echo ""
              echo "========================================="
              echo "✅ Deployment completed successfully!"
              echo "========================================="
            else
              echo "❌ Application failed to start!"
              tail -n 50 ~/koraveler-back/koraveler/logs/koraveler.log
              exit 1
            fi
          ENDSSH
          
          # 키 파일 삭제
          rm -f private_key.pem